raindex-version: 8898591f3bcaa21dc91dc3b8584330fc405eadfa

gui:
  name: Two-sided dynamic spread strategies
  description: The dynamic spread strategy for market-making uses time-based adjustments to maintain liquidity by narrowing spreads as market conditions stabilize, while recalculating averages and trade sizes to mitigate risks during trends.
  deployments:
    - deployment: polygon-quick-wmatic
      name: QUICK<>WPOL (WMATIC) on Polygon.
      description: Rotate QUICK and WPOL (WMATIC) on Polygon.

      fields:
        - binding: initial-io
          name: Initial price (QUICK per WPOL/WMATIC)
          description: The rough price ratio for QUICK to WPOL/WMATIC (e.g. 0.1).
          min: 0
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Maximum amount per auction (WPOL)
          description: The maximum amount of WPOL that will be offered in a single auction.
          min: 0
          presets:
            - value: 50
            - value: 100
            - value: 150
            - value: 500
        - binding: min-amount
          name: Minimum amount per auction (WPOL)
          description: The minimum amount of WPOL that will be offered in a single auction.
          min: 0
          presets:
            - value: 20
            - value: 50
            - value: 100

      deposits:
        - token: polygon-quick
          min: 0
          presets:
            - 0
            - 100
            - 500
            - 1000
            - 70000
        - token: polygon-wmatic
          min: 0
          presets:
            - 0
            - 100
            - 500
            - 1000
            - 7000

    - deployment: polygon-quick-old-quick
      name: QUICK (old)<>QUICK on Polygon.
      description: Rotate QUICK (old) and QUICK on Polygon.

      fields:
        - binding: initial-io
          name: Initial price (QUICK per QUICK (old))
          description: The rough price ratio for new QUICK to old QUICK (e.g. 1034).
          min: 1000
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.005x
              value: 1.005
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Maximum amount per auction (QUICK new)
          description: The maximum amount of QUICK (new) that will be offered in a single auction.
          min: 0
          presets:
            - value: 200
            - value: 300
            - value: 500
            - value: 1000
            - value: 1500
        - binding: min-amount
          name: Minimum amount per auction (QUICK new)
          description: The minimum amount of QUICK (new) that will be offered in a single auction.
          min: 0
          presets:
            - value: 100
            - value: 150
            - value: 200
            - value: 500

      deposits:
        - token: polygon-quick-old
          min: 0
          presets:
            - 0
            - 0.1
            - 0.5
            - 1
            - 10
            - 12.5
            - 75
        - token: polygon-quick
          min: 0
          presets:
            - 0
            - 100
            - 500
            - 1000
            - 10000
            - 12500
            - 75000

    - deployment: polygon-usdc-ioen
      name: USDC<>IOEN on Polygon.
      description: Rotate USDC and IOEN on Polygon.

      fields:
        - binding: initial-io
          name: Initial price (USDC per IOEN)
          description: The rough USD price you see for IOEN on Dextools (e.g. 0.0026).
          min: 0
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Maximum amount per auction (USDC)
          description: The maximum amount of USDC that will be offered in a single auction.
          min: 0
          presets:
            - value: 10
            - value: 20
            - value: 50
            - value: 100
            - value: 200
        - binding: min-amount
          name: Minimum amount per auction (USDC)
          description: The minimum amount of USDC that will be offered in a single auction.
          min: 0
          presets:
            - value: 10
            - value: 20

      deposits:
        - token: polygon-usdc
          min: 0
          presets:
            - 0
            - 100
            - 500
            - 1000
            - 5000
            - 10000
        - token: polygon-ioen
          min: 0
          presets:
            - 0
            - 500000
            - 1000000
            - 2000000
            - 3500000

    - deployment: base-usdc-weth
      name: USDC<>WETH on Base.
      description: Rotate USDC and WETH on Base.

      fields:
        - binding: initial-io
          name: Initial price (USDC per WETH)
          description: The rough USDC price you see for WETH on Dextools (e.g. 2500).
          min: 1
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Max amount
          description: The maximum amount of USDC that will be offered in a single auction.
          min: 5
          presets:
            - name: $10
              value: 10
            - name: $20
              value: 20
            - name: $50
              value: 50
            - name: $100
              value: 100
        - binding: min-amount
          name: Minimum amount
          description: The minimum amount of USDC that will be offered in a single auction.
          min: 5
          presets:
            - name: $5
              value: 5
            - name: $10
              value: 10
            - name: $20
              value: 20

      deposits:
        - token: base-usdc
          min: 0
          presets:
            - 0
            - 100
            - 200
            - 500
            - 1000
        - token: base-weth
          min: 0
          presets:
            - 0
            - 0.05
            - 0.1
            - 0.2
            - 0.5

    - deployment: base-usdc-paid
      name: USDC<>PAID on Base.
      description: Rotate USDC and PAID on Base.

      fields:
        - binding: initial-io
          name: Initial price (USDC per PAID)
          description: The rough USDC price you see for PAID on Dex Screener (e.g. 0.04983).
          min: 0
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Max amount
          description: The maximum amount of USDC that will be offered in a single auction.
          min: 5
          presets:
            - name: $10
              value: 10
            - name: $20
              value: 20
            - name: $50
              value: 50
            - name: $100
              value: 100
        - binding: min-amount
          name: Minimum amount
          description: The minimum amount of USDC that will be offered in a single auction.
          min: 5
          presets:
            - name: $5
              value: 5
            - name: $10
              value: 10
            - name: $20
              value: 20
      deposits:
        - token: base-usdc
          min: 0
          presets:
            - 0
            - 100
            - 200
            - 500
            - 1000
        - token: base-paid
          min: 0
          presets:
            - 0
            - 1000
            - 5000
            - 10000
            - 20000

    - deployment: arbitrum-usdc-weth
      name: USDC<>WETH on Arbitrum.
      description: Rotate USDC and WETH on Arbitrum.

      fields:
        - binding: initial-io
          name: Initial price (USDC per WETH)
          description: The rough USDC price you see for WETH on Dextools (e.g. 2500).
          min: 1
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Max amount
          description: The maximum amount of USDC that will be offered in a single auction.
          min: 5
          presets:
            - name: $10
              value: 10
            - name: $20
              value: 20
            - name: $50
              value: 50
            - name: $100
              value: 100
        - binding: min-amount
          name: Minimum amount
          description: The minimum amount of USDC that will be offered in a single auction.
          min: 5
          presets:
            - name: $5
              value: 5
            - name: $10
              value: 10
            - name: $20
              value: 20

      deposits:
        - token: arbitrum-usdc
          min: 0
          presets:
            - 0
            - 100
            - 200
            - 500
            - 1000
        - token: arbitrum-weth
          min: 0
          presets:
            - 0
            - 0.05
            - 0.1
            - 0.2
            - 0.5

    - deployment: arbitrum-wbtc-weth
      name: WBTC<>WETH on Arbitrum.
      description: Rotate WBTC and WETH on Arbitrum.

      fields:
        - binding: initial-io
          name: Initial price (WBTC per WETH)
          description: This should be the WETH price you see for WBTC on Dextools (e.g. 0.038).
          min: 0
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 0
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per price halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Max amount
          description: The maximum amount of WBTC that will be offered in a single auction.
          min: 0.00005
          presets:
            - name: 0.001
              value: 0.001
            - name: 0.002
              value: 0.002
            - name: 0.01
              value: 0.01
            - name: 0.1
              value: 0.1
        - binding: min-amount
          name: Minimum amount
          description: The minimum amount of WBTC that will be offered in a single auction.
          min: 0.00005
          presets:
            - name: 0.0001
              value: 0.0001
            - name: 0.0002
              value: 0.0002
            - name: 0.001
              value: 0.001
            - name: 0.01
              value: 0.01

      deposits:
        - token: arbitrum-wbtc
          min: 0
          presets:
            - 0
            - 0.01
            - 0.1
        - token: arbitrum-weth
          min: 0
          presets:
            - 0
            - 0.01
            - 0.1

    - deployment: base-usdc-toshi
      name: USDC<>TOSHI on Base.
      description: Rotate USDC and TOSHI on Base.

      fields:
        - binding: initial-io
          name: Initial price (USDC per TOSHI)
          description: The rough USDC price you see for TOSHI on Dextools (e.g. 0.000175)
          min: 0
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Max amount
          description: The maximum amount of USDC that will be offered in a single auction.
          min: 0
          presets:
            - name: $10
              value: 10
            - name: $20
              value: 20
            - name: $50
              value: 50
            - name: $100
              value: 100
        - binding: min-amount
          name: Minimum amount
          description: The minimum amount of USDC that will be offered in a single auction.
          min: 0
          presets:
            - name: $1
              value: 1
            - name: $5
              value: 5
            - name: $10
              value: 10

      deposits:
        - token: base-usdc
          min: 0
          presets:
            - 0
            - 10
            - 50
            - 100
        - token: base-toshi
          min: 0
          presets:
            - 0
            - 50000
            - 100000
            - 500000
    - deployment: flare-sflr-wflr
      name: SFLR<>WFLR on Flare.
      description: Rotate sFLR (Sceptre staked FLR) and WFLR on Flare.

      fields:
        - binding: initial-io
          name: Initial price (WFLR per sFLR)
          description: The rough initial WFLR to sFLR ratio (e.g. 1.11).
          min: 1
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.001x
              value: 1.001
            - name: 1.002x
              value: 1.002
            - name: 1.005x
              value: 1.005
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Max amount
          description: The maximum amount of sFLR that will be offered in a single auction.
          min: 0
          presets:
            - name: 100
              value: 100
            - name: 1000
              value: 1000
            - name: 10000
              value: 10000
            - name: 100000
              value: 100000
        - binding: min-amount
          name: Minimum amount
          description: The minimum amount of sFLR that will be offered in a single auction.
          min: 0
          presets:
            - name: 10
              value: 10
            - name: 100
              value: 100
            - name: 1000
              value: 1000

      deposits:
        - token: flare-sflr
          min: 0
          presets:
            - 0
            - 100
            - 1000
            - 10000
        - token: flare-wflr
          min: 0
          presets:
            - 0
            - 100
            - 1000
            - 10000
    - deployment: flare-usdce-sflr
      name: USDC.e<>sFLR on Flare.
      description: Rotate USDC.e (Bridged USDC on Stargate) and sFLR on Flare.

      fields:
        - binding: initial-io
          name: Initial price (USDC.e per sFLR)
          description: The rough USD price you see for sFLR on Dextools (e.g. 0.0172).
          min: 0
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Max amount
          description: The maximum amount of USDC.e that will be offered in a single auction.
          min: 0
          presets:
            - name: $10
              value: 10
            - name: $20
              value: 20
            - name: $50
              value: 50
            - name: $100
              value: 100
        - binding: min-amount
          name: Minimum amount
          description: The minimum amount of USDC.e that will be offered in a single auction.
          min: 0
          presets:
            - name: $0.1
              value: 0.1
            - name: $1
              value: 1
            - name: $10
              value: 10

      deposits:
        - token: flare-usdce
          min: 0
          presets:
            - 0
            - 0.01
            - 50
            - 100
        - token: flare-sflr
          min: 0
          presets:
            - 0
            - 0.01
            - 50
            - 100
    - deployment: flare-usdce-weth
      name: USDC.e<>WETH on Flare.
      description: Rotate USDC.e (Bridged USDC on Stargate) and WETH on Flare.

      fields:
        - binding: initial-io
          name: Initial price (USDC.e per WETH)
          description: The rough USD price you see for WETH on Dextools (e.g. 2500).
          min: 1
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Max amount
          description: The maximum amount of USDC.e that will be offered in a single auction.
          min: 1
          presets:
            - name: $10
              value: 10
            - name: $20
              value: 20
            - name: $50
              value: 50
            - name: $100
              value: 100
        - binding: min-amount
          name: Minimum amount
          description: The minimum amount of USDC.e that will be offered in a single auction.
          min: 1
          presets:
            - name: $1
              value: 1
            - name: $2
              value: 2
            - name: $5
              value: 5
            - name: $10
              value: 10
      deposits:
        - token: flare-usdce
          min: 0
          presets:
            - 0
            - 100
            - 500
            - 1000
        - token: flare-weth
          min: 0
          presets:
            - 0
            - 0.05
            - 0.2
            - 0.4
    - deployment: base-usdc-wlth
      name: USDC<>WLTH on Base.
      description: Rotate USDC and WLTH on Base.
      fields:
        - binding: initial-io
          name: Initial price (USDC per WLTH)
          description: The rough USDC price you see for WLTH on Dextools (e.g. 0.035).
          min: 0
        - binding: next-trade-multiplier
          name: Next trade multiplier
          description: This is the most the strategy will move the price in a single trade. Larger numbers will capture larger price jumps but trade less often, smaller numbers will trade more often but be less defensive against large price jumps in the market.
          min: 1
          presets:
            - name: 1.01x
              value: 1.01
            - name: 1.02x
              value: 1.02
            - name: 1.05x
              value: 1.05
        - binding: time-per-epoch
          name: Time per halving (seconds)
          description: The amount of time (in seconds) between halvings of the price and the amount offered during each auction, relative to their baselines.
          min: 600
          presets:
            - name: 1 hour (3600)
              value: 3600
            - name: 2 hours (7200)
              value: 7200
            - name: 4 hours (14400)
              value: 14400
            - name: 8 hours (28800)
              value: 28800
        - binding: max-amount
          name: Max amount
          description: The maximum amount of USDC that will be offered in a single auction.
          min: 5
          presets:
            - name: $10
              value: 10
            - name: $20
              value: 20
            - name: $50
              value: 50
            - name: $100
              value: 100
        - binding: min-amount
          name: Minimum amount
          description: The minimum amount of USDC that will be offered in a single auction.
          min: 5
          presets:
            - name: $5
              value: 5
            - name: $10
              value: 10
            - name: $20
              value: 20
      deposits:
        - token: base-usdc
          min: 0
          presets:
            - 0
            - 100
            - 200
            - 500
            - 1000
        - token: base-wlth
          min: 0
          presets:
            - 0
            - 1000
            - 5000
            - 10000
            - 20000



scenarios:
  arbitrum:
    orderbook: arbitrum
    runs: 1
    bindings:
      raindex-subparser: 0xb06202aA3Fe7d85171fB7aA5f17011d17E63f382
      history-cap: '1e50'
    scenarios:
      wbtc-weth:
        runs: 1
        bindings:
          amount-token: 0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f
          initial-output-token: 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1
          initial-input-token: 0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f
      usdc-weth:
        runs: 1
        bindings:
          amount-token: 0xaf88d065e77c8cC2239327C5EDb3A432268e5831
          initial-output-token: 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1
          initial-input-token: 0xaf88d065e77c8cC2239327C5EDb3A432268e5831
  base:
    orderbook: base
    runs: 1
    bindings:
      raindex-subparser: 0x662dFd6d5B6DF94E07A60954901D3001c24F856a
      history-cap: '1e50'
    scenarios:
      usdc-weth:
        runs: 1
        bindings:
          amount-token: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
          initial-output-token: 0x4200000000000000000000000000000000000006
          initial-input-token: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
      usdc-toshi:
        runs: 1
        bindings:
          amount-token: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
          initial-output-token: 0xac1bd2486aaf3b5c0fc3fd868558b082a531b2b4
          initial-input-token: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
      usdc-paid:
        runs: 1
        bindings:
          amount-token: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
          initial-output-token: 0x655A51e6803faF50D4acE80fa501af2F29C856cF
          initial-input-token: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
      usdc-wlth:
        runs: 1
        bindings:
          amount-token: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
          initial-output-token: 0x99b2B1A2aDB02B38222ADcD057783D7e5D1FCC7D
          initial-input-token: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
  flare:
    orderbook: flare
    runs: 1
    bindings:
      raindex-subparser: 0xFe2411CDa193D9E4e83A5c234C7Fd320101883aC
      history-cap: '1e50'
    scenarios:
      sflr-wflr:
        runs: 1
        bindings:
          amount-token: 0x12e605bc104e93B45e1aD99F9e555f659051c2BB
          initial-output-token: 0x12e605bc104e93B45e1aD99F9e555f659051c2BB
          initial-input-token: 0x1D80c49BbBCd1C0911346656B529DF9E5c2F783d
      wflr-eusdt:
        runs: 1
        bindings:
          amount-token: 0xfbda5f676cb37624f28265a144a48b0d6e87d3b6
          initial-output-token: 0x12e605bc104e93B45e1aD99F9e555f659051c2BB
          initial-input-token: 0xfbda5f676cb37624f28265a144a48b0d6e87d3b6
      usdce-sflr:
        runs: 1
        bindings:
          amount-token: 0xfbda5f676cb37624f28265a144a48b0d6e87d3b6
          initial-output-token: 0x12e605bc104e93B45e1aD99F9e555f659051c2BB
          initial-input-token: 0xfbda5f676cb37624f28265a144a48b0d6e87d3b6
      usdce-weth:
        runs: 1
        bindings:
          amount-token: 0xfbda5f676cb37624f28265a144a48b0d6e87d3b6
          initial-output-token: 0x1502FA4be69d526124D453619276FacCab275d3D
          initial-input-token: 0xfbda5f676cb37624f28265a144a48b0d6e87d3b6
  polygon:
    orderbook: polygon
    runs: 1
    bindings:
      raindex-subparser: 0xF9323B7d23c655122Fb0272D989b83E105cBcf9d
      history-cap: '1e50'
    scenarios:
      quick-old-quick:
        runs: 1
        bindings:
          amount-token: 0xB5C064F955D8e7F38fE0460C556a72987494eE17
          initial-output-token: 0x831753dd7087cac61ab5644b308642cc1c33dc13
          initial-input-token: 0xB5C064F955D8e7F38fE0460C556a72987494eE17
      quick-wmatic:
        runs: 1
        bindings:
          amount-token: 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270
          initial-output-token: 0xB5C064F955D8e7F38fE0460C556a72987494eE17
          initial-input-token: 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270
      usdc-ioen:
        runs: 1
        bindings:
          amount-token: 0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359
          initial-output-token: 0xd0e9c8f5Fae381459cf07Ec506C1d2896E8b5df6
          initial-input-token: 0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359

networks:
  flare:
    rpc: https://rpc.ankr.com/flare
    chain-id: 14
    network-id: 14
    currency: FLR
  base:
    rpc: https://mainnet.base.org
    chain-id: 8453
    network-id: 8453
    currency: ETH
  arbitrum:
    rpc: https://rpc.ankr.com/arbitrum
    chain-id: 42161
    network-id: 42161
    currency: ETH
  polygon:
    rpc: https://rpc.ankr.com/polygon
    chain-id: 137
    network-id: 137
    currency: POL

metaboards:
  flare: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/mb-flare-0x893BBFB7/0.1/gn
  base: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/mb-base-0x59401C93/0.1/gn
  arbitrum: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/mb-arbitrum/0.1/gn
  polygon: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/mb-polygon/0.1/gn

subgraphs:
  flare: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/ob4-flare/0.2/gn
  base: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/ob4-base/0.7/gn
  arbitrum: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/ob4-arbitrum/0.1/gn
  polygon: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/ob4-polygon/0.4/gn

orderbooks:
  flare:
    address: 0xCEe8Cd002F151A536394E564b84076c41bBBcD4d
  base:
    address: 0xd2938e7c9fe3597f78832ce780feb61945c377d7
    network: base
    subgraph: base
  arbitrum:
    address: 0x550878091b2B1506069F61ae59e3A5484Bca9166
    network: arbitrum
    subgraph: arbitrum
  polygon:
    address: 0x7D2f700b1f6FD75734824EA4578960747bdF269A
    network: polygon
    subgraph: polygon

deployers:
  flare:
    address: 0xE3989Ea7486c0F418C764e6c511e86f6E8830FAb
  base:
    address: 0xC1A14cE2fd58A3A2f99deCb8eDd866204eE07f8D
    network: base
  arbitrum:
    address: 0x9B0D254bd858208074De3d2DaF5af11b3D2F377F
    network: arbitrum
  polygon:
    address: 0xE7116BC05C8afe25e5B54b813A74F916B5D42aB1
    network: polygon

tokens:
  arbitrum-usdc:
    network: arbitrum
    address: 0xaf88d065e77c8cC2239327C5EDb3A432268e5831
    decimals: 6
  arbitrum-wbtc:
    network: arbitrum
    address: 0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f
    decimals: 8
  arbitrum-weth:
    network: arbitrum
    address: 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1
    decimals: 18
  base-toshi:
    network: base
    address: 0xac1bd2486aaf3b5c0fc3fd868558b082a531b2b4
    decimals: 18
  base-usdc:
    network: base
    address: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
    decimals: 6
  base-weth:
    network: base
    address: 0x4200000000000000000000000000000000000006
    decimals: 18
  base-paid:
    network: base
    address: 0x655A51e6803faF50D4acE80fa501af2F29C856cF
    decimals: 18
  flare-usdce:
    network: flare
    address: 0xfbda5f676cb37624f28265a144a48b0d6e87d3b6
    decimals: 6
  flare-wflr:
    network: flare
    address: 0x1D80c49BbBCd1C0911346656B529DF9E5c2F783d
    decimals: 18
  flare-sflr:
    network: flare
    address: 0x12e605bc104e93B45e1aD99F9e555f659051c2BB
    decimals: 18
  flare-weth:
    network: flare
    address: 0x1502FA4be69d526124D453619276FacCab275d3D
    decimals: 18
  polygon-wmatic:
    network: polygon
    address: 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270
    decimals: 18
  polygon-quick-old:
    network: polygon
    address: 0x831753dd7087cac61ab5644b308642cc1c33dc13
    decimals: 18
  polygon-quick:
    network: polygon
    address: 0xB5C064F955D8e7F38fE0460C556a72987494eE17
    decimals: 18
  polygon-ioen:
    network: polygon
    address: 0xd0e9c8f5Fae381459cf07Ec506C1d2896E8b5df6
    decimals: 18
  polygon-usdc:
    network: polygon
    address: 0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359
    decimals: 6
  base-wlth:
    network: base
    address: 0x99b2B1A2aDB02B38222ADcD057783D7e5D1FCC7D
    decimals: 18

orders:
  arbitrum-wbtc-weth:
    network: arbitrum
    orderbook: arbitrum
    inputs:
      - token: arbitrum-wbtc
      - token: arbitrum-weth
    outputs:
      - token: arbitrum-wbtc
      - token: arbitrum-weth
  arbitrum-usdc-weth:
    network: arbitrum
    orderbook: arbitrum
    inputs:
      - token: arbitrum-usdc
      - token: arbitrum-weth
    outputs:
      - token: arbitrum-usdc
      - token: arbitrum-weth
  base-usdc-weth:
    network: base
    orderbook: base
    inputs:
      - token: base-usdc
      - token: base-weth
    outputs:
      - token: base-usdc
      - token: base-weth
  base-usdc-toshi:
    network: base
    orderbook: base
    inputs:
      - token: base-usdc
      - token: base-toshi
    outputs:
      - token: base-usdc
      - token: base-toshi
  base-usdc-paid:
    network: base
    orderbook: base
    inputs:
      - token: base-usdc
      - token: base-paid
    outputs:
      - token: base-usdc
      - token: base-paid
  flare-usdce-sflr:
    network: flare
    orderbook: flare
    inputs:
      - token: flare-sflr
      - token: flare-usdce
    outputs:
      - token: flare-sflr
      - token: flare-usdce
  flare-sflr-wflr:
    network: flare
    orderbook: flare
    inputs:
      - token: flare-sflr
      - token: flare-wflr
    outputs:
      - token: flare-sflr
      - token: flare-wflr
  flare-usdce-weth:
    network: flare
    orderbook: flare
    inputs:
      - token: flare-usdce
      - token: flare-weth
    outputs:
      - token: flare-usdce
      - token: flare-weth
  polygon-quick-old-quick:
    network: polygon
    orderbook: polygon
    inputs:
      - token: polygon-quick-old
      - token: polygon-quick
    outputs:
      - token: polygon-quick-old
      - token: polygon-quick
  polygon-quick-wmatic:
    network: polygon
    orderbook: polygon
    inputs:
      - token: polygon-quick
      - token: polygon-wmatic
    outputs:
      - token: polygon-quick
      - token: polygon-wmatic
  polygon-usdc-ioen:
    network: polygon
    orderbook: polygon
    inputs:
      - token: polygon-usdc
      - token: polygon-ioen
    outputs:
      - token: polygon-usdc
      - token: polygon-ioen
  base-usdc-wlth:
    network: base
    orderbook: base
    inputs:
      - token: base-usdc
      - token: base-wlth
    outputs:
      - token: base-usdc
      - token: base-wlth

deployments:
  arbitrum-wbtc-weth:
    order: arbitrum-wbtc-weth
    scenario: arbitrum.wbtc-weth
  arbitrum-usdc-weth:
    order: arbitrum-usdc-weth
    scenario: arbitrum.usdc-weth
  base-usdc-weth:
    order: base-usdc-weth
    scenario: base.usdc-weth
  base-usdc-toshi:
    order: base-usdc-toshi
    scenario: base.usdc-toshi
  base-usdc-paid:
    order: base-usdc-paid
    scenario: base.usdc-paid
  flare-usdce-sflr:
    order: flare-usdce-sflr
    scenario: flare.usdce-sflr
  flare-sflr-wflr:
    order: flare-sflr-wflr
    scenario: flare.sflr-wflr
  flare-usdce-weth:
    order: flare-usdce-weth
    scenario: flare.usdce-weth
  polygon-quick-old-quick:
    order: polygon-quick-old-quick
    scenario: polygon.quick-old-quick
  polygon-quick-wmatic:
    order: polygon-quick-wmatic
    scenario: polygon.quick-wmatic
  polygon-usdc-ioen:
    order: polygon-usdc-ioen
    scenario: polygon.usdc-ioen
  base-usdc-wlth:
    order: base-usdc-wlth
    scenario: base.usdc-wlth

---
#raindex-subparser !Subparser for the Raindex.

#min-amount !Amount will decay down to this number each epoch.
#max-amount !Amount will decay down from this number each epoch.
#time-per-epoch !Duration of one unit of streaming amount and io ratio halflife.
#next-trade-multiplier !Start next auction at this x the last trade.
#history-cap !The max amount of trade history kept for cost basis tracking (denominated in same token as tranche size).
#amount-token !The token that is the amount token for the strategy. This denominates tranche sizes.
#initial-io !The IO ratio that the strategy starts at. The quote token is the output so that the IO ratio looks like a CEX price.
#initial-output-token !Initial output token for the initial IO ratio.
#initial-input-token !Initial input token for the initial IO ratio.

#last-trade-io-key "last-trade-io"
#last-trade-time-key "last-trade-time"
#last-trade-output-token-key "last-trade-output-token"
#vwaio-key "cost-basis-io-ratio"

#amount-is-output
  _: equal-to(amount-token output-token());

#get-cost-basis-io-ratio
  this-vwaio: get(hash(order-hash() input-token() output-token() vwaio-key)),
  other-vwaio: get(hash(order-hash() output-token() input-token() vwaio-key)),
  _: any(this-vwaio inv(any(other-vwaio max-value())));

#set-cost-basis-io-ratio
  /* first reduce outstanding inventory */
  other-total-out-key: hash(order-hash() output-token() input-token()),
  other-vwaio-key: hash(order-hash() output-token() input-token() vwaio-key),
  other-total-out: get(other-total-out-key),
  other-vwaio: get(other-vwaio-key),
  other-reduction-out: min(other-total-out input-vault-increase()),
  reduced-other-total-out: sub(other-total-out other-reduction-out),
  :set(other-total-out-key reduced-other-total-out),
  :set(other-vwaio-key every(reduced-other-total-out other-vwaio)),

  /* then increase our inventory */
  total-out-key: hash(order-hash() input-token() output-token()),
  this-vwaio-key: hash(order-hash() input-token() output-token() vwaio-key),
  total-out: get(total-out-key),
  vwaio: get(this-vwaio-key),
  total-in: mul(total-out vwaio),
  remaining-in: sub(input-vault-increase() other-reduction-out),
  new-in: add(total-in remaining-in),
  remaining-out: div(remaining-in calculated-io-ratio()),
  new-out: add(total-out remaining-out),
  new-vwaio: every(new-out div(new-in any(new-out max-value()))),
  cap-out: if(call<'amount-is-output>() history-cap div(history-cap any(new-vwaio calculated-io-ratio()))),
  capped-out: min(new-out cap-out),
  :set(total-out-key capped-out),
  :set(this-vwaio-key new-vwaio);

#halflife
epoch:,
/**
 * Shrinking the multiplier like this
 * then applying it 10 times allows for
 * better precision when max-io-ratio
 * is very large, e.g. ~1e10 or ~1e20+
 *
 * This works because `power` loses
 * precision on base `0.5` when the
 * exponent is large and can even go
 * to `0` while the io-ratio is still
 * large. Better to keep the multiplier
 * higher precision and drop the io-ratio
 * smoothly for as long as we can.
 */
multiplier:
  power(0.5 div(epoch 10)),
val:
  mul(
    multiplier
    multiplier
    multiplier
    multiplier
    multiplier
    multiplier
    multiplier
    multiplier
    multiplier
    multiplier
  );

#set-last-trade
last-io:,
:set(hash(order-hash() last-trade-time-key) now()),
:set(hash(order-hash() last-trade-io-key) last-io),
:set(hash(order-hash() last-trade-output-token-key) output-token());

#handle-add-order
using-words-from raindex-subparser
:set(hash(order-hash() last-trade-time-key) now()),
:set(hash(order-hash() last-trade-io-key) initial-io),
:set(hash(order-hash() last-trade-output-token-key) initial-output-token),
:set(hash(order-hash() initial-input-token initial-output-token) 1e-18),
:set(hash(order-hash() initial-input-token initial-output-token vwaio-key) initial-io);

#get-last-trade
stored-last-io:get(hash(order-hash() last-trade-io-key)),
stored-last-output-token:get(hash(order-hash() last-trade-output-token-key)),
last-time:get(hash(order-hash() last-trade-time-key)),
_: if(equal-to(stored-last-output-token output-token()) stored-last-io inv(stored-last-io));

#get-epoch
last-time _: call<'get-last-trade>(),
duration: sub(now() last-time),
epochs: div(duration time-per-epoch);

#amount-for-epoch
epoch io:,
decay: call<'halflife>(epoch),
variable-component: sub(max-amount min-amount),
base-amount: add(min-amount mul(variable-component decay)),
_: if(call<'amount-is-output>() base-amount mul(base-amount inv(io)));

#io-for-epoch
epoch:,
last-io: call<'get-last-trade>(),
cost-basis-io: call<'get-cost-basis-io-ratio>(),
max-next-trade: mul(max(cost-basis-io last-io) next-trade-multiplier),
baseline: any(cost-basis-io last-io),
variable-component: sub(max-next-trade baseline),
decay: call<'halflife>(epoch),
above-baseline: mul(variable-component decay),
_: add(baseline above-baseline);

#calculate-io
using-words-from raindex-subparser
epoch:call<'get-epoch>(),
io: call<'io-for-epoch>(epoch),
max-output: call<'amount-for-epoch>(epoch io),
_: io,
:call<'set-last-trade>(io);

#handle-io
min-trade-amount: mul(min-amount 0.9),
:ensure(greater-than-or-equal-to(if(call<'amount-is-output>() output-vault-decrease() input-vault-increase()) min-trade-amount) "Min trade amount."),
:call<'set-cost-basis-io-ratio>();