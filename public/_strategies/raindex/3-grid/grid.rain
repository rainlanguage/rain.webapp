raindex-version: 8898591f3bcaa21dc91dc3b8584330fc405eadfa

networks:
  base:
    rpc: https://mainnet.base.org
    chain-id: 8453
    network-id: 8453
    currency: ETH

subgraphs:
  base: https://example.com/subgraph
  
metaboards:
  base: https://api.goldsky.com/api/public/project_clv14x04y9kzi01saerx7bxpg/subgraphs/mb-base-0x59401C93/0.1/gn
  
orderbooks:
  base:
    address: 0xd2938e7c9fe3597f78832ce780feb61945c377d7
    network: base
    subgraph: base

deployers:
  base:
    address: 0xC1A14cE2fd58A3A2f99deCb8eDd866204eE07f8D
    network: base

tokens:
  base-usdc:
    network: base
    address: 0x833589fcd6edb6e08f4c7c32d4f71b54bda02913
    decimals: 6
  base-cofek:
    network: base
    address: 0xa794e6e187E7Bc0aBDfb1025260eD8482328A599
    decimals: 18
  base-weth:
    network: base
    address: 0x4200000000000000000000000000000000000006
    decimals: 18

orders:
  base-usdc-cofek:
    orderbook: base
    network: base
    inputs:
      - token: base-usdc
    outputs:
      - token: base-cofek
  base-cofek-usdc:
    orderbook: base
    network: base
    inputs:
      - token: base-cofek
    outputs:
      - token: base-usdc
  base-weth-cofek:
    orderbook: base
    network: base
    inputs:
      - token: base-weth
    outputs:
      - token: base-cofek
  base-cofek-weth:
    orderbook: base
    network: base
    inputs:
      - token: base-cofek
    outputs:
      - token: base-weth

scenarios:
  base:
    orderbook: base
    bindings:
      raindex-subparser: 0x662dFd6d5B6DF94E07A60954901D3001c24F856a
      tranche-space-min-headroom: 0.25
      tranche-space-recharge-delay: 300

deployments:
  base-usdc-cofek:
    order: base-usdc-cofek
    scenario: base
  base-cofek-usdc:
    order: base-cofek-usdc
    scenario: base
  base-weth-cofek:
    order: base-weth-cofek
    scenario: base
  base-cofek-weth:
    order: base-cofek-weth
    scenario: base

gui:
  name: Grid
  description: >
    Grid order strategy
  deployments:
    - deployment: base-usdc-cofek
      name: Grid sell COFEK for USDC on Base.
      description:
        Grid sell COFEK for USDC on Base network.
      deposits:
        - token: base-cofek
          min: 0
          presets:
            - 0
            - 100
            - 500
            - 1000
      fields:
        - binding: baseline-io-ratio
          name: Baseline USDC per COFEK
          min: 1000
        - binding: io-ratio-growth
          name: IO ratio growth per tranche
          min: 1
        - binding: tranche-size
          name: Tranche size in COFEK
          min: 0
        - binding: seconds-per-tranche
          name: Time to recharge one grid tranche in seconds (0 is disabled).
          min: 0
          presets:
            - name: Disabled (0)
              value: 0
            - name: 1 hour (3600)
              value: 3600
            - name: 6 hours (21600)
              value: 21600
            - name: 12 hours (43200)
              value: 43200
            - name: 24 hours (86400)
              value: 86400

    - deployment: base-cofek-usdc
      name: Grid buy COFEK with USDC on Base.
      description:
        Grid buy COFEK with USDC on Base network.
      deposits:
        - token: base-usdc
          min: 0
          presets:
            - 0
            - 100
            - 500
            - 1000
      fields:
        - binding: baseline-io-ratio
          name: Baseline COFEK per USDC
          min: 1000
        - binding: io-ratio-growth
          name: IO ratio growth per tranche
          min: 1
        - binding: tranche-size
          name: Tranche size in USDC
          min: 0
        - binding: seconds-per-tranche
          name: Time to recharge one grid tranche in seconds (0 is disabled).
          min: 0
          presets:
            - name: Disabled (0)
              value: 0
            - name: 1 hour (3600)
              value: 3600
            - name: 6 hours (21600)
              value: 21600
            - name: 12 hours (43200)
              value: 43200
            - name: 24 hours (86400)
              value: 86400

    - deployment: base-weth-cofek
      name: Grid sell COFEK for WETH on Base.
      description:
        Grid sell COFEK for WETH on Base network.
      deposits:
        - token: base-cofek
          min: 0
          presets:
            - 0
            - 100
            - 500
            - 1000
      fields:
        - binding: baseline-io-ratio
          name: Baseline WETH per COFEK
          min: 1000
        - binding: io-ratio-growth
          name: IO ratio growth per tranche
          min: 1
        - binding: tranche-size
          name: Tranche size in COFEK
          min: 0
        - binding: seconds-per-tranche
          name: Time to recharge one grid tranche in seconds (0 is disabled).
          min: 0
          presets:
            - name: Disabled (0)
              value: 0
            - name: 1 hour (3600)
              value: 3600
            - name: 6 hours (21600)
              value: 21600
            - name: 12 hours (43200)
              value: 43200
            - name: 24 hours (86400)
              value: 86400

    - deployment: base-cofek-weth
      name: Grid buy COFEK with WETH on Base.
      description:
        Grid buy COFEK with WETH on Base network.
      deposits:
        - token: base-weth
          min: 0
          presets:
            - 0
            - 0.1
            - 0.5
            - 1
      fields:
        - binding: baseline-io-ratio
          name: Baseline COFEK per WETH
          min: 1000
        - binding: io-ratio-growth
          name: IO ratio growth per tranche
          min: 1
        - binding: tranche-size
          name: Tranche size in WETH
          min: 0
        - binding: seconds-per-tranche
          name: Time to recharge one grid tranche in seconds (0 is disabled).
          min: 0
          presets:
            - name: Disabled (0)
              value: 0
            - name: 1 hour (3600)
              value: 3600
            - name: 6 hours (21600)
              value: 21600
            - name: 12 hours (43200)
              value: 43200
            - name: 24 hours (86400)
              value: 86400
---

#raindex-subparser !The subparser for Raindex.

#baseline-io-ratio !The IO ratio that the strategy starts at. The quote token is the output so that the IO ratio looks like a CEX price.
#io-ratio-growth !The growth rate of the IO ratio.
#tranche-size !The size of each tranche in amount token.

#tranche-space-min-headroom !The minimum headroom for the tranche space.
#tranche-space-recharge-delay !The delay before the tranche space recharges.
#seconds-per-tranche !The number of seconds per tranche to recharge.

#handle-add-order
:;

#calculate-io
  using-words-from raindex-subparser
  current-tranche-floor
  current-tranche-headroom
  tranche-total-size:
    call<'calculate-tranche>(),
  tranche-io-ratio: call<'linear-growth>(baseline-io-ratio io-ratio-growth current-tranche-floor),
  amount-available: mul(tranche-total-size current-tranche-headroom),
  io-ratio: tranche-io-ratio;

#handle-io
  tranche-space-before
  _
  _
  tranche-total-size: call<'calculate-tranche>(),
  tranche-amount-diff: output-vault-decrease(),
  tranche-space-diff: div(tranche-amount-diff tranche-total-size),
  tranche-space-after: add(tranche-space-before tranche-space-diff),
  :ensure(
    any(
      is-zero(frac(tranche-space-after))
      greater-than-or-equal-to(headroom(tranche-space-after) tranche-space-min-headroom)
    )
    "Trade causes dust."
  ),
  :call<'set-last-tranche-space>(tranche-space-after),
  :call<'set-last-trade-time>();

#calculate-tranche
  last-tranche-space: call<'get-last-tranche-space>(),
  last-trade-time: call<'get-last-trade-time>(),
  current-time: now(),
  recharge-duration: saturating-sub(current-time add(last-trade-time tranche-space-recharge-delay)),
  recharged-tranche-space: every(seconds-per-tranche div(recharge-duration any(seconds-per-tranche max-value()))),
  tranche-space-now: saturating-sub(last-tranche-space recharged-tranche-space),
  current-tranche-floor: floor(tranche-space-now),
  current-tranche-headroom: headroom(tranche-space-now),
  tranche-total-size: tranche-size;

#linear-growth
  base rate t:,
  _: linear-growth(base rate t);

#get-last-tranche-space
  _: get(order-hash());

#set-last-tranche-space
  tranche-space:,
  :set(order-hash() tranche-space);

#get-last-trade-time
  _: get(hash(order-hash()));

#set-last-trade-time
  :set(hash(order-hash()) now());